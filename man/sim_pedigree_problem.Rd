% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_pedigree_problem.R
\name{sim_pedigree_problem}
\alias{sim_pedigree_problem}
\title{Simulate a pedigree problem}
\usage{
sim_pedigree_problem(
  inheritance = c("AD", "AR", "XD", "XR"),
  generations = 4,
  iter_limit = 20,
  time_limit = 5,
  force = FALSE,
  seed = NULL,
  ...
)
}
\arguments{
\item{inheritance}{Inheritance of the trait to be simulated.}

\item{generations}{Number of \code{generations} to simulate. The minimum number of
\code{generations} is 2. There is no upper limit, but the objects can quickly
become very large for high numbers of \code{generations} and large total fertility
rates. See \code{\link[=sim_pedigree]{sim_pedigree()}} for details.}

\item{iter_limit}{Maximum number of iterations for attempting to simulate
a pedigree problem. Simulation may fail. Ignored if \code{force} is set to \code{TRUE}.}

\item{time_limit}{Time limit in seconds for attempting to simulate a
pedigree problem. Simulation may fail. Ignored if \code{force} is set to \code{TRUE}.}

\item{force}{Set to \code{TRUE} to use a more ruthless method to simulate an
unambiguous pedigree. The script runs until a valid pedigree is created.}

\item{seed}{Set seed to create reproducible results.}

\item{...}{Other arguments passed to the pedigree simulation function
\code{\link[=sim_pedigree]{sim_pedigree()}}.}
}
\value{
Returns an object of class \code{ped}.
}
\description{
User friendly function that creates a full pedigree problem by simulating a
pedigree (via \code{\link[=sim_pedigree]{sim_pedigree()}}) and a genetic trait (using \code{\link[=sim_trait]{sim_trait()}},
\code{\link[=sim_trait_xd]{sim_trait_xd()}}, or \code{\link[=sim_trait_xr]{sim_trait_xr()}}). Returns an object of class \code{ped},
analysed with the \code{\link[=analyse_pedigree]{analyse_pedigree()}} function. Sometimes the simulation is
not successful within iteration and time limits. Consider setting \code{force}
to \code{TRUE} to enforce a successful simulation.
}
\examples{
obj1 <- sim_pedigree_problem(inheritance = "AR", generations = 3, seed = 5)
plot(obj1)

## The following simulation is not successful
\dontrun{sim_pedigree_problem(inheritance = "XR", generations = 3, seed = 1)}

## Simulation is successful with force set to TRUE
obj2 <- sim_pedigree_problem(inheritance = "XR", generations = 3, seed = 1, force = TRUE)
plot(obj2)
}
